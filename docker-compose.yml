---
version: '3'
networks:
  stream:
    driver: bridge
volumes:
  stream:
services:
  elasticsearch:
    networks:
      - stream
    volumes:
      - stream:/usr/share/elasticsearch/data      
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    restart: on-failure
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
  kibana:
    networks:
      - stream      
    image: docker.elastic.co/kibana/kibana:7.8.0
    depends_on:
      - elasticsearch    
    restart: on-failure
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  zookeeper:
    networks:
      - stream
    image: confluentinc/cp-zookeeper:latest
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    networks:
      - stream
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    restart: on-failure
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  nimbus: 
    networks:
      - stream      
    image: storm
    command: storm nimbus
    depends_on:
      - zookeeper
    restart: on-failure
    ports:
      - 6627:6627
  supervisor:
    networks:
      - stream
    image: storm
    command: storm supervisor
    depends_on:
      - zookeeper        
      - nimbus   
    ports:
      - 8000:8000      
    restart: on-failure
  ui:
    networks:
      - stream      
    image: storm 
    command: storm ui
    depends_on:
      - zookeeper        
      - nimbus
      - supervisor  
    restart: on-failure 
    ports:
      - 8080:8080
  transactions:
    networks:
      - stream
    volumes:
      - stream:/var/lib/transactions      
    depends_on:
      - kafka
    restart: on-failure
    build:
      context: ./sources/producers/transactions/
  rates:
    networks:
      - stream
    volumes:
      - stream:/var/lib/rates      
    depends_on:
      - kafka
    restart: on-failure
    build:
      context: ./sources/producers/rates/   
  watcher:
    networks:
      - stream  
    volumes:
      - stream:/var/lib/consumer       
    depends_on:
      - elasticsearch
      - supervisor
      - transactions
      - rates
    restart: on-failure
    build:
      context: ./sources/consumer